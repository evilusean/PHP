PHP Official Documentation:
https://www.php.net/docs.php

PHP - Laravel Official Documentation:
https://laravel.com/docs/11.x
Authentication (add with 2 commands : 'composer require laravel/breeze' 'php artisan breeze:install' ) :
https://laravel.com/docs/11.x/authentication
https://laravel.com/docs/11.x/starter-kits
Blade.php - Directives :
https://laravel.com/docs/12.x/blade

JetBrains - PHP Storm (Future Sean, paid app) :
https://www.jetbrains.com/phpstorm/
VSCode Extensions : 
'PHP - Devsense'(Has PHP syntax highlighting, autocomplete, etc) 
'Laravel - Laravel' (Official VSCode Extension for Laravel) 

PHP Certificate:
https://www.w3schools.com/php/php_exam.asp
Coursera PHP:
https://www.coursera.org/specializations/web-applications
https://www.coursera.org/learn/web-applications-php
https://www.coursera.org/learn/database-applications-php
PHP Laravel Sail: Docker vs Valet(Mac local machine): 
https://www.youtube.com/watch?v=xmvD_EjNE-4&ab_channel=AaronFrancis
PHP in 5 hours:
https://www.youtube.com/watch?v=OK_JCtrrv-c&ab_channel=freeCodeCamp.org
PHP-Laravel-Instagram Clone :
https://www.youtube.com/watch?v=ImtZ5yENzgE&ab_channel=freeCodeCamp.org
https://github.com/coderstape/freecodegram
Laravel in 4 hours:
https://www.youtube.com/watch?v=MYyJ4PuL4pY&ab_channel=TraversyMedia
Laravel Playlist(Traversy):
https://www.youtube.com/watch?v=EU7PRmCpx-0&list=PLillGF-RfqbYhQsN5WMXy6VsDMKGadrJ-&ab_channel=TraversyMedia
Laravel PHP+ Vue JS Google Drive Clone, fully working:
https://www.youtube.com/watch?v=Wn3IPX_ax-0&ab_channel=freeCodeCamp.org

LainChan(image messageboard-PHP):
https://github.com/lainchan/lainchan

Heroku  + PHP + PostGreSQL = Free hosting
  Ideas = E-commerce site/forum site/news aggregation site/most disliked site(+extension)/end 2 end encryption site/

FCC - Learn Laravel by Building a Medium Clone – Tutorial (2025 - 7hours) : 
https://www.youtube.com/watch?v=MG1kt_wiIz0

FCC - Build a Google Calendar Clone with PHP, MySql & JavaScript (2025 - 3hours) :
https://www.freecodecamp.org/news/build-a-google-calendar-clone-with-php-mysql-and-javascript/

MacOS Install:
Open Terminal (launchpad -> type in terminal):
Install Brew:
https://brew.sh/
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
brew install curl
brew install php
To Troubleshoot brew:
brew doctor

Linux Install:
https://www.php.net/manual/en/install.unix.php
sudo apt install php

Windows Install:
Download Zip from PHP web, unzip
You need to edit PATH variables, and add it to windows path, tell windows where the location of PHP is
cmd #open command
echo %PATH% #will print out all path variables on windows
php -v #checks version of PHP

Apache Webserver install:
sudo apt-get install apache2
sudo apt-get install libapache2-mod-php

How to Install LAMP Stack(Linux Appache MySQL PHP):
https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04

Install PHP-XDebug:
sudo apt-get install php-xdebug
How to turn on PHP-xdebug:
https://xdebug.org/docs/install

# starts a php webserver in terminal 
php -S localhost:4000 

Get IP address:
If you enter the command “ifconfig” in the terminal, all information will be displayed. You can also use the commands “ip addr” or “ip a”
Grep 1 liner for IP address:
ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'

You can create a file in '/var/wwww/html' directory on linux and run it from there using 'http://localhost/test.php' in the browser 
cd /var/www/html

PHP-Laravel Installer:
https://laravel.com/docs/5.0/installation
  1) Install Composer:
  https://getcomposer.org/
  https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
  2)Install Laravel:
  composer global require "laravel/installer=~1.1"

Install Node/NPM:
curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo apt install Node.js 
sudo apt install npm
sudo apt-get update
sudo apt-get upgrade

Use Laravel:
laravel new blog #would create a directory named blog containing a fresh Laravel installation with all dependencies installed. This method of installation is much faster than installing via Composer
composer create-project laravel/laravel {directory} "5.0.*" --prefer-dist #way to user composer to start a laravel project

https://operavps.com/docs/install-laravel-on-ubuntu/
sudo composer create-project laravel/laravel laravelapp
Laravel Fix:
https://stackoverflow.com/questions/61395786/i-get-laravel-command-not-found-on-ubuntu-20-04

How to Start a project:
https://laravel.com/docs/10.x/installation
composer global require laravel/installer
laravel new example-app
cd example-app
php artisan serve #Once you have started the Artisan development server, your application will be accessible in your web browser at http://localhost:8000

php artisan #lists all commands you can use in artisan, 'available commands' are unique to artisan, other commands are universal

Arch Linux Laravel Install (with SQLite) :
sudo pacman -Syu #update system, reboot
sudo pacman -S php php-fpm php-gd php-intl #install all php prerequisites
sudo pacman -S composer #install composer
sudo pacman -S php-sqlite #project will use sqlite
sudo nano /etc/php/php.ini # After installation, you need to enable the extension in your php.ini file. 
# Find the lines for the SQLite extensions and uncomment them by removing the semicolon ; at the beginning of each line. ';extension=pdo_sqlite' ';extension=sqlite3' 
sudo systemctl restart php-fpm #Restart the PHP-FPM service for the changes to take effect.
composer global require laravel/installer # Use Composer to install the Laravel installer globally.
#Add the Composer vendor bin directory to your system's PATH. This allows you to run the laravel command from any directory. The path is typically ~/.config/composer/vendor/bin on Arch Linux.
nano ~/.bashrc # Add the following line to the end of the file: 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"'
source ~/.bashrc #resource, so you can use 'laravel' in terminal anywhere
laravel new your-project-name # will allow you to now create a new project 

Laravel Homestead:
A pre-packaged Vagrant box providing a complete development environment with PHP, Nginx, databases, and other services within a virtual machine.
https://laravel.com/docs/12.x/homestead
https://github.com/laravel/homestead
Laravel Homestead is an official, pre-packaged Vagrant box designed to provide a convenient and consistent development environment for Laravel applications. 
  It eliminates the need to manually install and configure server software like PHP, Nginx, MySQL, and other tools directly on your local machine.
Arch Linux Homestead Install :
sudo pacman -S vagrant 
sudo pacman -S virtualbox
git clone https://github.com/laravel/homestead.git ~/.local/share/homestead
cd ~/.local/share/homestead
git checkout release
bash init.sh
Configure Homestead.yaml: Open the generated ~/.local/share/homestead/Homestead.yaml file and configure it to your needs. 
  This includes setting the provider to virtualbox and mapping your project directories
Add a hosts file entry: Edit your /etc/hosts file with sudo and add an entry that maps your site's domain to the Homestead IP address (e.g., 192.168.10.10).
Installing Laravel Homestead on Arch Linux involves a few key steps. Since Homestead is a pre-configured Vagrant box, 
  you'll first need to install Vagrant and a virtualization provider like VirtualBox.
Open the generated ~/.local/share/homestead/Homestead.yaml file and configure it to your needs. This includes setting the provider to virtualbox and mapping your project directories.
YAML
provider: virtualbox
folders:
    - map: ~/Projects/MyProject
      to: /home/vagrant/MyProject
sites:
    - map: myproject.test
      to: /home/vagrant/MyProject/public
Add a hosts file entry:
Edit your /etc/hosts file with sudo and add an entry that maps your site's domain to the Homestead IP address (e.g., 192.168.10.10).
sudo nano /etc/hosts
# Add this line to the end of the file
192.168.10.10 myproject.test
Launching Homestead :
After all the configurations are complete, you can launch your virtual machine.
Navigate to the Homestead directory:
cd ~/.local/share/homestead
Start the virtual machine:
vagrant up # The first time you run this, Vagrant will download the pre-packaged Laravel Homestead box, which may take some time.
Access the VM: Once it's up, you can SSH into the virtual machine.
vagrant ssh

Add Auth/Login/Registation/Password Recovery to your PHP Laravel project with 2 commands :
'composer require laravel/breeze' # will require and install breeze package, which has everything you need for authentication : registration, login, email verification, password resets, etc
'php artisan breeze:install' # installs breeze into your project update composer.json, package.lock, add tonnes of files(scaffolding) for login, auth, etc, 
